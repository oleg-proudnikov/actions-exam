name: env-dynamic

on:
  workflow_dispatch:
    inputs:
      # AKS specific variables
      aks-enable-autoscale:
        type: boolean
        description: Whether to enable AKS autoscale or not
        required: false
      aks-vm-size:
        type: string
        description: The VM size use for the AKS node-pool
        required: false
      aks-sku-tier:
        type: string
        description: The SKU tier for the AKS cluster
        required: false

jobs:
  create-env:
    runs-on: ubuntu-latest
    steps:
      - name: Create dynamic environment
        id: create
        run: |
          json="{}"

          # Read name-value pairs
          while IFS='=' read -r key value; do
            if [ -n "$value" ] && [ $value != null ]; then
              if [ $value = true ] || [ $value = false ] || [[ $value =~ ^[0-9]+$ ]]; then
                json=$(echo "$json" | jq -c --arg key "$key" --argjson value "$value" '. + {($key): $value}')
              else
                json=$(echo "$json" | jq -c --arg key "$key" --arg value "$value" '. + {($key): $value}')
              fi
            fi
          done <<EOF
          TF_VAR_aks_default_node_pool_auto_scaling_enabled=${{ inputs.aks-enable-autoscale }}
          TF_VAR_aks_default_node_pool_vm_size=${{ inputs.aks-vm-size }}
          TF_VAR_aks_sku_tier=${{ inputs.aks-sku-tier }}
          EOF

          echo env=$json >> $GITHUB_OUTPUT

      - name: Apply dynamic environment
        run: |
          echo $TF_VAR_aks_default_node_pool_auto_scaling_enabled
          echo $TF_VAR_aks_default_node_pool_vm_size
          echo $TF_VAR_aks_sku_tier
        env: ${{ fromJson( steps.create.outputs.env ) }}
